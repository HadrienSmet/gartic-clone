/* eslint-disable react-hooks/rules-of-hooks */
import LanguagesModal from "@/components/mui/LanguagesModal";
import RoomContent from "@/components/roomPage/roomContent/RoomContent";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import RoomHeader from "../components/roomPage/RoomHeader";
import { io, Socket } from "socket.io-client";
import { useUserContext } from "@/context/UserContext";
import { useUsersContext } from "@/context/UsersContext";

// const socket = io("http://localhost:3000", {
//     path: "/api/socket",
// });
const room = () => {
    const [socket, setSocket] = useState<Socket>();
    const { userData, setUserData } = useUserContext();
    const { usersData, setUsersData } = useUsersContext();
    useEffect(() => {
        if (!socket) {
            const newSocket = io("http://localhost:3000", {
                path: "/api/socket",
            });
            console.log("useEffect working");

            newSocket.on("connect", () => {
                console.log(`connected to the server with id: ${newSocket.id}`);
                setUsersData!({
                    roomId: newSocket.id,
                    users: [
                        {
                            pseudo: userData!.pseudo,
                            avatar: userData!.avatar,
                        },
                    ],
                });
            });
            newSocket.on("socket-id", (socketId) => {
                console.log("My socket ID is: " + socketId);
            });
            newSocket.on("diconnect", () => {
                console.log("disconnected to the server");
            });
            newSocket.on("connect_error", (error) => {
                console.error(error); // VÃ©rifiez l'erreur de connexion
            });
            setSocket(newSocket);
        }

        return () => {
            socket?.disconnect();
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    return (
        <>
            <Head>
                <title>Gartic Room</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="room">
                <RoomHeader />
                <RoomContent />
                <LanguagesModal />
            </main>
        </>
    );
};

export default room;
